‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                                            ‚ïë
‚ïë                  ‚úÖ ERROR 500 CORREGIDO - EXPLICACI√ìN                      ‚ïë
‚ïë                                                                            ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

================================================================================
PROBLEMA IDENTIFICADO
================================================================================

Error al intentar crear/guardar un m√≥vil:
  POST http://127.0.0.1:8000/api/moviles/ 500 (Internal Server Error)

CAUSA:
Los campos CharField en el modelo Movil no ten√≠an max_length definido:
  - alias: CharField sin max_length
  - patente: CharField sin max_length  
  - gps_id: CharField sin max_length

Django REQUIERE que todos los CharField tengan un max_length especificado.

================================================================================
SOLUCI√ìN APLICADA
================================================================================

‚úÖ CORRECCI√ìN EN gps/models.py:

ANTES:
  alias = models.CharField(null=True, blank=True)                    # ‚ùå Sin max_length
  patente = models.CharField(unique=True, null=True, blank=True)     # ‚ùå Sin max_length
  gps_id = models.CharField(unique=True, null=True, blank=True)      # ‚ùå Sin max_length

DESPU√âS:
  alias = models.CharField(max_length=100, null=True, blank=True)    # ‚úÖ Con max_length
  patente = models.CharField(max_length=20, unique=True, ...)        # ‚úÖ Con max_length
  gps_id = models.CharField(max_length=50, unique=True, ...)         # ‚úÖ Con max_length

‚úÖ MIGRACIONES CREADAS Y APLICADAS:
  - python manage.py makemigrations
  - python manage.py migrate

================================================================================
LONGITUDES DEFINIDAS
================================================================================

Campo              Max Length    Justificaci√≥n
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
alias              100           Nombre descriptivo del m√≥vil
patente            20            Patente est√°ndar (ej: ABC123, AA123BB)
gps_id             50            ID del dispositivo GPS
codigo             32            Ya ten√≠a (sin cambios)
vin                17            Est√°ndar VIN (sin cambios)
tipo_vehiculo      20            Ya ten√≠a (sin cambios)

================================================================================
PASOS PARA VERIFICAR
================================================================================

1. REINICIAR SERVIDOR DJANGO
   ```
   python manage.py runserver
   ```

2. PROBAR CREAR UN M√ìVIL
   - Abre http://127.0.0.1:8000/
   - Clic en "Nuevo M√≥vil"
   - Completa el formulario
   - Clic en "Guardar"

3. VERIFICAR QUE NO HAY ERRORES
   ‚úì Sin error 500
   ‚úì M√≥vil se crea correctamente
   ‚úì M√≥vil aparece en la lista

================================================================================
SI PERSISTE EL ERROR
================================================================================

1. VERIFICAR LOGS DEL SERVIDOR
   En la terminal donde corre Django, busca el error espec√≠fico.

2. VERIFICAR CAMPOS √öNICOS
   Si el error menciona "duplicate key" o "unique constraint":
   - Est√°s intentando usar una patente que ya existe
   - Est√°s intentando usar un gps_id que ya existe
   - Est√°s intentando usar un c√≥digo que ya existe
   
   Soluci√≥n: Usa valores diferentes para campos √∫nicos.

3. VERIFICAR FORMATO DE DATOS
   - anio: debe ser n√∫mero entre 1900-2030
   - patente: debe tener max 20 caracteres
   - alias: debe tener max 100 caracteres
   - gps_id: debe tener max 50 caracteres

4. VERIFICAR CONEXI√ìN A BASE DE DATOS
   ```
   python manage.py dbshell
   ```
   Si no conecta, verifica settings.py y credenciales.

================================================================================
ERROR ERR_CONNECTION_REFUSED
================================================================================

Si ves: "Failed to load resource: net::ERR_CONNECTION_REFUSED"

CAUSA: El servidor Django se detuvo o reinici√≥.

SOLUCI√ìN:
1. Verifica que el servidor est√© corriendo
2. Revisa la terminal donde ejecutaste `python manage.py runserver`
3. Si se detuvo, reinicia el servidor
4. Si hay errores, corr√≠gelos y reinicia

================================================================================
PRUEBA R√ÅPIDA
================================================================================

Despu√©s de reiniciar el servidor, prueba desde la consola del navegador (F12):

```javascript
// Crear m√≥vil de prueba
const testMovil = {
    patente: 'TEST123',
    alias: 'Veh√≠culo de Prueba',
    marca: 'Toyota',
    modelo: 'Corolla',
    anio: 2020,
    tipo_vehiculo: 'auto',
    activo: true
};

// Enviar a la API
fetch('http://127.0.0.1:8000/api/moviles/', {
    method: 'POST',
    headers: {'Content-Type': 'application/json'},
    body: JSON.stringify(testMovil)
})
.then(r => r.json())
.then(data => console.log('‚úÖ M√≥vil creado:', data))
.catch(err => console.error('‚ùå Error:', err));
```

Si ves "‚úÖ M√≥vil creado:", el problema est√° resuelto.

================================================================================
COMANDOS √öTILES
================================================================================

# Verificar configuraci√≥n
python manage.py check

# Ver migraciones pendientes
python manage.py showmigrations

# Crear migraciones
python manage.py makemigrations

# Aplicar migraciones
python manage.py migrate

# Revertir √∫ltima migraci√≥n (si es necesario)
python manage.py migrate gps 0001

# Iniciar servidor
python manage.py runserver

# Ver shell de Django
python manage.py shell

================================================================================
PREVENCI√ìN FUTURA
================================================================================

Al crear nuevos modelos o campos, SIEMPRE:

‚úÖ CharField ‚Üí DEBE tener max_length
‚úÖ IntegerField ‚Üí Considera min/max si aplica
‚úÖ DecimalField ‚Üí DEBE tener max_digits y decimal_places
‚úÖ Campos √∫nicos ‚Üí Maneja ValidationError apropiadamente
‚úÖ Campos obligatorios ‚Üí Define null=False, blank=False
‚úÖ Campos opcionales ‚Üí Define null=True, blank=True

EJEMPLO CORRECTO:

```python
class MiModelo(models.Model):
    nombre = models.CharField(max_length=100)                      # ‚úÖ
    email = models.EmailField(max_length=254, unique=True)         # ‚úÖ
    edad = models.IntegerField(null=True, blank=True)              # ‚úÖ
    precio = models.DecimalField(max_digits=10, decimal_places=2)  # ‚úÖ
    activo = models.BooleanField(default=True)                     # ‚úÖ
```

================================================================================

‚úÖ El error ha sido corregido.
üîÑ Reinicia el servidor Django.
‚ú® ¬°Deber√≠as poder crear m√≥viles sin problemas!

================================================================================
